Given an integer array nums and an integer k, return the kth largest element in the array.

Note that it is the kth largest element in the sorted order, not the kth distinct element.

You must solve it in O(n) time complexity.

 

Example 1:

Input: nums = [3,2,1,5,6,4], k = 2
Output: 5
Example 2:

Input: nums = [3,2,3,1,2,4,5,5,6], k = 4
Output: 4


========================================================================================================================================


C#: 
Given two strings s and t, return true if t is an anagram of s, and false otherwise.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Requirement: You cannot use methods in linq and class libraries.

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false
-------------------------------------------------------------------------------------------------------------------------------------------
Answer:
	public class Solution {
	    public bool IsAnagram(string s, string t) {
	        if(s.Length != t.Length){
	            return false;
	        }
	        Dictionary<char, int> Dict = new Dictionary<char, int>();        
	        for(int i = 0; i < s.Length; i++){
	            if(!Dict.ContainsKey(s[i])){
	                Dict.Add(s[i], 1);
	            }
	            else{
	                Dict[s[i]]++;
	            }
	        }
	        for(int i = 0; i < t.Length; i++){
	            if(!Dict.ContainsKey(t[i])){
	                return false;
	            }
	            else{
	                Dict[t[i]]--;
	                if(Dict[t[i]] == 0){
	                    Dict.Remove(t[i]);
	                }
	            }
	        }
	        return Dict.Count == 0? true : false;
	    }
	}

=============================================================================================================================================
Implement strStr().
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Clarification:
What should we return when needle is an empty string? This is a great question to ask during an interview.
For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().

Example 1:

Input: haystack = "hello", needle = "ll"
Output: 2
Example 2:

Input: haystack = "aaaaa", needle = "bba"
Output: -1
-------------------------------------------------------------------------------------------------------------------------------------------
Answer:
public class Solution {
    public int StrStr(string haystack, string needle) {

        int firstLength = haystack.Length;
        int secondLength = needle.Length;

        if (secondLength == 0)
        {
            return 0;
        }

        if (firstLength < secondLength || (firstLength == secondLength && haystack != needle))
        {
            return -1;
        }

        int firstIndex = 0;
        int secondIndex = 0;

        while (firstIndex < firstLength && secondIndex < secondLength)
        {
            if (haystack[firstIndex] == needle[secondIndex])
            {
                firstIndex++;
                secondIndex++;
            }
            else
            {
                firstIndex = firstIndex - secondIndex + 1;
                secondIndex = 0;
            }
        }

        return secondIndex == secondLength? firstIndex - secondIndex: -1;
    }
}

=============================================================================================================================================
Sql:

Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature on a certain day.
 
Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Return the result table in any order.

The query result format is in the following example.

Example 1:

Input: 
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output: 
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation: 
In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
In 2015-01-04, the temperature was higher than the previous day (20 -> 30).
-------------------------------------------------------------------------------------------------------------------------------------------
Answer:
MS Sql

select b.id 
from Weather a
left join Weather b on a.recordDate = dateadd(dd,-1,b.recordDate)
where a.Temperature<b.Temperature

My Sql

SELECT
    weather.id AS 'Id'
FROM
    weather
        JOIN
    weather w ON DATEDIFF(weather.date, w.date) = 1
        AND weather.Temperature > w.Temperature


=============================================================================================================================================
Table: Employee

+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| salary      | int  |
+-------------+------+
id is the primary key column for this table.
Each row of this table contains information about the salary of an employee.
 
Write an SQL query to report the second highest salary from the Employee table. If there is no second highest salary, the query should report null.

The query result format is in the following example.
 

Example 1:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
Output: 
+---------------------+
| SecondHighestSalary |
+---------------------+
| 200                 |
+---------------------+
Example 2:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
+----+--------+
Output: 
+---------------------+
| SecondHighestSalary |
+---------------------+
| null                |
+---------------------+

-------------------------------------------------------------------------------------------------------------------------------------------
MS Sql:
select ISNULL((select distinct Salary from Employee
order by Salary desc
OFFSET 1 ROWS
FETCH NEXT 1 ROWS ONLY), NULL)
AS "SecondHighestSalary";

My Sql:
SELECT DISTINCT
    Salary AS SecondHighestSalary
FROM
    Employee
ORDER BY Salary DESC
LIMIT 1 OFFSET 1
=============================================================================================================================================